Check Array for Ascending Order ✅

You are given an array of integers. Check if the array is in Ascending Order. If yes, print "Yes", else print "No.

Sample Input 1:

3 5 10 13 16 12 14

Sample Output 1:

No

Explanation 1: The given array is not in ascending order.

Sample Input 2:

3 5 10 13 16 25 33

Sample Output 2:

Yes

Explanation 2: The given array is in ascending order.



function isAscending(arr) {
 if(arr.length<1){
    return "Not valid array to check"
  }
  let lastNum = arr[0];
  for(let i=0;i<arr.length;i++){
    if(arr[i] < lastNum){
      return "no";
    }
  }else{
    return "Yes";
  }
}










Given an array of positive integers arr[], return the second largest element from the array. If the second largest element doesn't exist then return -1.

Note: The second largest element should not be equal to the largest element.

Examples:

Input: arr[] = [12, 35, 1, 10, 34, 1]
Output: 34
Explanation: The largest element of the array is 35 and the second largest element is 34.
Input: arr[] = [10, 5, 10]
Output: 5
Explanation: The largest element of the array is 10 and the second largest element is 5.
Input: arr[] = [10, 10, 10]
Output: -1
Explanation: The largest element of the array is 10 and the second largest element does not exist.
Constraints:
2 ≤ arr.size() ≤ 105
1 ≤ arr[i] ≤ 105












function getSecondLargest(arr) {
        
        
   let sortedArr = arr.sort(function(a,b){return a-b});
   
        for(let i = sortedArr.length-1; i>-1; i--) {
            let maxNum = sortedArr[sortedArr.length-1];
            if(sortedArr[i]<maxNum) {
                return sortedArr[i];
            }
        } return -1;
        
        
    }
